generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?
    user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
    @@index([userId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@index([userId])
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    accounts      Account[]
    sessions      Session[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

model cart {
    id         BigInt    @id @default(autoincrement())
    userId     BigInt?
    sessionId  String    @db.VarChar(100)
    token      String    @db.VarChar(100)
    status     Int       @default(0) @db.SmallInt
    firstName  String?   @db.VarChar(50)
    middleName String?   @db.VarChar(50)
    lastName   String?   @db.VarChar(50)
    mobile     String?   @db.VarChar(15)
    email      String?   @db.VarChar(50)
    line1      String?   @db.VarChar(50)
    line2      String?   @db.VarChar(50)
    city       String?   @db.VarChar(50)
    province   String?   @db.VarChar(50)
    country    String?   @db.VarChar(50)
    createdAt  DateTime  @db.DateTime(0)
    updatedAt  DateTime? @db.DateTime(0)
    content    String?   @db.Text

    @@index([userId], map: "idx_cart_user")
}

model cart_item {
    id        BigInt    @id @default(autoincrement())
    productId BigInt
    cartId    BigInt
    sku       String    @db.VarChar(100)
    price     Float     @default(0) @db.Float
    discount  Float     @default(0) @db.Float
    quantity  Int       @default(0) @db.SmallInt
    active    Boolean   @default(false)
    createdAt DateTime  @db.DateTime(0)
    updatedAt DateTime? @db.DateTime(0)
    content   String?   @db.Text

    @@index([cartId], map: "idx_cart_item_cart")
    @@index([productId], map: "idx_cart_item_product")
}

model category {
    id        BigInt  @id @default(autoincrement())
    parentId  BigInt?
    title     String  @db.VarChar(75)
    metaTitle String? @db.VarChar(100)
    slug      String  @db.VarChar(100)
    content   String? @db.Text

    @@index([parentId], map: "idx_category_parent")
}

model order {
    id           BigInt    @id @default(autoincrement())
    userId       BigInt?
    sessionId    String    @db.VarChar(100)
    token        String    @db.VarChar(100)
    status       Int       @default(0) @db.SmallInt
    subTotal     Float     @default(0) @db.Float
    itemDiscount Float     @default(0) @db.Float
    tax          Float     @default(0) @db.Float
    shipping     Float     @default(0) @db.Float
    total        Float     @default(0) @db.Float
    promo        String?   @db.VarChar(50)
    discount     Float     @default(0) @db.Float
    grandTotal   Float     @default(0) @db.Float
    firstName    String?   @db.VarChar(50)
    middleName   String?   @db.VarChar(50)
    lastName     String?   @db.VarChar(50)
    mobile       String?   @db.VarChar(15)
    email        String?   @db.VarChar(50)
    line1        String?   @db.VarChar(50)
    line2        String?   @db.VarChar(50)
    city         String?   @db.VarChar(50)
    province     String?   @db.VarChar(50)
    country      String?   @db.VarChar(50)
    createdAt    DateTime  @db.DateTime(0)
    updatedAt    DateTime? @db.DateTime(0)
    content      String?   @db.Text

    @@index([userId], map: "idx_order_user")
}

model order_item {
    id        BigInt    @id @default(autoincrement())
    productId BigInt
    orderId   BigInt
    sku       String    @db.VarChar(100)
    price     Float     @default(0) @db.Float
    discount  Float     @default(0) @db.Float
    quantity  Int       @default(0) @db.SmallInt
    createdAt DateTime  @db.DateTime(0)
    updatedAt DateTime? @db.DateTime(0)
    content   String?   @db.Text

    @@index([orderId], map: "idx_order_item_order")
    @@index([productId], map: "idx_order_item_product")
}

model product {
    id          BigInt    @id @default(autoincrement())
    userId      BigInt
    title       String    @db.VarChar(75)
    metaTitle   String?   @db.VarChar(100)
    slug        String    @unique(map: "uq_slug") @db.VarChar(100)
    summary     String?   @db.TinyText
    type        Int       @default(0) @db.SmallInt
    sku         String    @db.VarChar(100)
    price       Float     @default(0) @db.Float
    discount    Float     @default(0) @db.Float
    quantity    Int       @default(0) @db.SmallInt
    techzone    Boolean   @default(false)
    createdAt   DateTime  @db.DateTime(0)
    updatedAt   DateTime? @db.DateTime(0)
    publishedAt DateTime? @db.DateTime(0)
    startsAt    DateTime? @db.DateTime(0)
    endsAt      DateTime? @db.DateTime(0)
    content     String?   @db.Text

    @@index([userId], map: "idx_product_user")
}

model product_category {
    productId  BigInt
    categoryId BigInt

    @@id([productId, categoryId])
    @@index([categoryId], map: "idx_pc_category")
    @@index([productId], map: "idx_pc_product")
}

model product_review {
    id          BigInt    @id @default(autoincrement())
    productId   BigInt
    parentId    BigInt?
    title       String    @db.VarChar(100)
    rating      Int       @default(0) @db.SmallInt
    published   Boolean   @default(false)
    createdAt   DateTime  @db.DateTime(0)
    publishedAt DateTime? @db.DateTime(0)
    content     String?   @db.Text

    @@index([parentId], map: "idx_review_parent")
    @@index([productId], map: "idx_review_product")
}

model transaction {
    id        BigInt    @id @default(autoincrement())
    userId    BigInt
    orderId   BigInt
    code      String    @db.VarChar(100)
    type      Int       @default(0) @db.SmallInt
    mode      Int       @default(0) @db.SmallInt
    status    Int       @default(0) @db.SmallInt
    createdAt DateTime  @db.DateTime(0)
    updatedAt DateTime? @db.DateTime(0)
    content   String?   @db.Text

    @@index([orderId], map: "idx_transaction_order")
    @@index([userId], map: "idx_transaction_user")
}
